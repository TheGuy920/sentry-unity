<Project>
  <PropertyGroup>
    <Version>3.1.0</Version>
    <LangVersion>12</LangVersion>
    <Nullable>enable</Nullable>
    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
    <GenerateDependencyFile>false</GenerateDependencyFile>
    <DevPackageFolderName>package-dev</DevPackageFolderName>
    <Deterministic>true</Deterministic>
    <Features>strict</Features>
    <SignAssembly>false</SignAssembly>

    <!-- This is the default for our lowest supported version 2019 LTS: netstandard2.0 -->
    <!-- The TargetFramework gets overridden depending on the UnityVersion here and in test/props -->
    <TargetFramework>netstandard2.0</TargetFramework>
    <!-- The RepoRoot gets used in the conditional propertygroup for finding the Unity version -->
    <RepoRoot>$([System.IO.Path]::GetDirectoryName($([MSBuild]::GetPathOfFileAbove('.gitignore', '$(MSBuildThisFileDirectory)'))))/</RepoRoot>
  </PropertyGroup>

  <!-- With this it's possible for the local environment (i.e. CI) to override the version  -->
  <PropertyGroup Condition="$(UNITY_VERSION) != ''">
    <UnityVersion>2022.3</UnityVersion>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Roslynator.Analyzers" Version="3.0.0" PrivateAssets="All" />
    <PackageReference Include="Microsoft.NETFramework.ReferenceAssemblies" Version="1.0.0" PrivateAssets="All" />
    <PackageReference Include="Microsoft.CodeAnalysis.BannedApiAnalyzers" Version="3.3.0" PrivateAssets="All" />
    <PackageReference Include="Nullable" Version="1.3.0" PrivateAssets="All" />
  </ItemGroup>

  <!-- Add reference once we figure out where the DLL is (find Unity version and install location) -->
<!--  <Target Name="ReferenceUnity" DependsOnTargets="FindUnity" BeforeTargets="BeforeResolveReferences">-->
<!--    <ItemGroup>-->
<!--      <UnityManagedPath>/mnt/2TB_NVME/SteamLibrary/steamapps/common/REPO/REPO_Data/Managed</UnityManagedPath>-->
<!--    </ItemGroup>-->
<!--    <Error Condition="'$(UnityManagedPath)' == ''" Text="'UnityManagedPath' not defined. Can't find UnityEngine.dll." />-->
<!--    <Error Condition="!Exists('$(UnityManagedPath)/UnityEngine.dll')" Text="Couldn't find UnityEngine at $(UnityManagedPath)/UnityEngine.dll." />-->
<!--    <ItemGroup>-->
<!--      <Reference Include="UnityEngine">-->
<!--        <HintPath>/mnt/2TB_NVME/SteamLibrary/steamapps/common/REPO/REPO_Data/Managed/UnityEngine.dll</HintPath>-->
<!--        <Private>false</Private>-->
<!--      </Reference>-->
<!--    </ItemGroup>-->
<!--  </Target>-->
</Project>
